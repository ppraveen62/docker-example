# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
#services:
#  server:
#    build:
#      context: .
#    ports:
#      - 5432:5432

# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker-compose up`.
#    depends_on:
#       db:
#         condition: service_healthy
#         environment:
#           - POSTGRES_URL =jdbc:postgresql://db:5432/iam_user
#    db:
#     image: postgres
#     restart: always
#     user: postgres
#     secrets:
#       - db-password
#     volumes:
#       - db-data:/var/lib/postgresql/data

#    environment:
#       - POSTGRES_DB=iam_user
#       - POSTGRES_USER=postgres
#       - POSTGRES_PASSWORD=postgres
#  ports:
#         - 5432:5432
#  environment:
#       - POSTGRES_DB=iam_user
#       - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
#  expose:
#       - 5432
#     healthcheck:
#       test: [ "CMD", "pg_isready" ]
#       interval: 10s
#       timeout: 5s
#       retries: 5
# volumes:
#   db-data:
# secrets:
#   db-password:
#     file: db/password.txt

#copy the file from chat-gpt


#services:
#  server:
#    build: .
#    ports:
#      - "8080:8080" # Change the port mapping to match your application's port
#    depends_on:
#      - db
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://localhost:5432/iam_user # Corrected environment variable name
#      - SPRING_DATASOURCE_USERNAME=postgres # Corrected environment variable name
#      - SPRING_DATASOURCE_PASSWORD=postgres # Corrected environment variable name
version: '3.8'
services:
  app:
    image: iam-user-server
    ports:
      - 8080:8080

    environment:
       SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/iam_user
       SPRING_DATASOURCE_USERNAME: postgres
       SPRING_DATASOURCE_PASSWORD: postgres
       SPRING_JPA_HIBERNATE_DDL-AUTO: create

    depends_on:
      - db
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres

    ports:
      - 5432:5432 # Expose PostgreSQL port

# Remove the commented-out sections for db-data and db-password as they are not needed for the current setup


